// get data from controller		контроль в консоли
let imageData = '<%= raw @image_data %>';
console.log("IN display_theme: @image_data = " + imageData );
let valuesQty = '<%= @image_data[:values_qty] %>';
console.log("IN display_theme: valuesQty = " + valuesQty );
$('.left_controls span.total_values h2.total').
append().html(valuesQty);

// show theme
let selectedTheme = '<%= @image_data[:theme] %>';

if( selectedTheme === "Выберите тему для оценки" || selectedTheme === "Select theme to leave your answer" ||
    selectedTheme === ""){
    $('.img-left-side').css({"display": "none"});
    $('.img-right-side').css({"display": "none"});
    $('.image .image_display .image_diag').css({"display": "none"});
}else{
    $('.img-left-side').css({"display": "block"});
    $('.img-right-side').css({"display": "block"});
    $('.image .image_display .image_diag').css({"display": "block"});
}

$('.image_display h2.up-theme').append().html(selectedTheme);

//restore button
$('.select_theme').empty().html("<%= j render 'work/button_theme_select' -%>");

// get data from controller
let imageCurrentIndex = '<%= @image_data[:index] %>';
//var firstThemeImagesName =
JSON.parse(firstThemeImages)["name"];
let oneImageName = '<%= @image_data[:name] %>';
let oneImageFile = '<%= @image_data[:file] %>';
console.log("3e IN display_theme: oneImageFile = " +
    oneImageFile);
let oneImageId = '<%= @image_data[:image_id] %>';
console.log("3f IN display_theme: oneImageId = " + oneImageId);
let themeImagesSize = '<%= @image_data[:images_arr_size] %>';
let selectedThemeId = '<%= @image_data[:theme_id] %>';


// show name of image
$('.image_display h2.up').append().html(oneImageName);

// show image
let pathImage = "assets/pictures/" + oneImageFile;
// $('.img-center').html('<img alt="Selected Image" src="' + pathImage + '"/>');
$(".img-center").attr({title: "Selected image" });
$(".img-center img").attr({alt: "Selected Image", src: pathImage, title: "Selected image" });

$('.img-right-side').click(function(event) {
    event.stopImmediatePropagation(); // would stop the event from bubbling to parent elements,
    $.ajax({		type: "get",	url: "api/next_image",		data: { index: imageCurrentIndex,
            theme_id: selectedThemeId,	    length: themeImagesSize },
        dataType: 'json'
    }).done(function (data_return) {
        imageCurrentIndex = data_return.new_image_index;
        oneImageName = data_return.name;  oneImageFile = data_return.file;
        oneImageId = data_return.image_id;
        $('.image_display h2.up').append().html(oneImageName);
        var pathImage = "assets/pictures/" + oneImageFile;
        $(".img-center").attr({title: "Selected image" });
        $(".img-center img").attr({alt: "Selected Image", src: pathImage, title: "Selected image" });
        var userValuedFlag = data_return.user_valued;
        if(userValuedFlag  == 1){  $('.left_controls span.common_value').css({"display": "block"});
            var imageValue = data_return.value;
            $('.image .image_display .image_user_value').append().html(imageValue).
            css({"display": "none"});  $('.image .image_display .image_diag').css({"display": "none"});
            var imageCommonValue = data_return.common_ave_value;
            $('.left_controls span.common_value h2.common').append().html(imageCommonValue);
        }else{	   $('.left_controls span.common_value').css({"display": "none"});
            $('.image .image_display .image_user_value').css({"display": "none"});
            $('.image .image_display .image_diag').css({"display": "block"});	}
    }) .fail(function (data_return) {
        console.log("error: data_return = " + data_return);	});
});




